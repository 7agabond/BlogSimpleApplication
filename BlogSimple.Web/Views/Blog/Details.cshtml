@using BlogSimple.Model.ViewModels.BlogViewModels;
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model BlogDetailsViewModel;
@{
    ViewData["Title"] = "View " + Model.Blog.Title;
    Layout = "~/Views/Blog/_DashboardLayoutDetails.cshtml";
}


<!-- Page content-->
<div class="container mt-5">
    <div hidden id="blogCategoryData" value='@Html.Raw(Json.Serialize(Enum.GetValues(typeof(BlogCategory))))'></div>
    <div hidden class="blogData" value='@Html.Raw(Json.Serialize(Model.Blog))'></div>
    @foreach (var comment in Model.Comments)
    {
        <div hidden class="commentsData" value='@Html.Raw(Json.Serialize(comment))'></div>
    }
    @foreach (var reply in Model.CommentReplies)
    {
        <div hidden class="repliesData" value='@Html.Raw(Json.Serialize(reply))'></div>
    }
    @{
        if (SignInManager.IsSignedIn(User))
        {
            <div hidden class="userSignedIn" value='true'></div>
            <div hidden class="signedInUsername" value='@Html.Raw((await UserManager.GetUserAsync(User)).UserName)'></div>
        } 
        else
        {
            <div hidden class="userSignedIn" value='false'></div>
        }
    }

    <div class="row">
        <div class="col-lg-8">
            <!-- Post content-->
            <article>
                <!-- Post header-->
                <header class="mb-4">
                    <!-- Post title-->
                    <h1 class="fw-bolder mb-1">@Model.Blog.Title</h1>
                    <!-- Post meta content-->
                    <div class="text-muted fst-italic mb-2">Posted on @Model.Blog.CreatedOn.ToString("MMM d, yyyy") by @Model.Blog.CreatedBy</div>
                    <div class="text-muted fst-italic mb-2">Last Updated on @Model.Blog.UpdatedOn.ToString("MMM d, yyyy")</div>
                    <!-- Post categories-->
                    <div id="categoryBadgeContainer">
                        
                    </div>
                </header>
                <!-- Preview image figure-->
                <figure class="mb-4"><img class="img-fluid rounded" src="https://dummyimage.com/900x400/ced4da/6c757d.jpg" alt="..." /></figure>
                <!-- Post content-->
                <section class="mb-5">
                    @Html.Raw(Model.Blog.Content)    
                </section>
            </article>
            <!-- Comments section-->
            <section class="mb-5">
                <div class="card bg-light">
                    <div class="card-body">
                        <!-- Comment form-->
                        <div class="write-comment-container mb-4">
                            <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                            <form class="create-comment-form mb-4" asp-controller="Blog" asp-action="CreateComment">
                                <input asp-for="Blog.Id" readonly hidden />
                                <textarea asp-for="Comment.Content" class="comment-textarea" rows="1" placeholder="Join the discussion and leave a comment!"></textarea>
                                <div class="form-group create-comment-buttons hide">
                                    @{
                                        <button class="btn btn-primary" id="hideCommentButtons">Cancel</button>
                                        if (SignInManager.IsSignedIn(User))
                                        {
                                            <button class="btn btn-primary" id="commentBtn" type="submit">Comment</button>
                                        }
                                        else
                                        {
                                            <a href="/Account/Login">Login to comment</a>
                                        }
                                    }
                                </div>
                            </form>
                        </div>
                        <div>
                            <!-- Comment with nested comments-->
                            <h3 class="mb-5">@Model.Comments.Count() Comments</h3>
                            <div id="commentContainer"></div>
                            @*@{
                                if (Model.Blog.Comments.Any())
                                {
                                    foreach (Comment comment in Model.Blog.Comments)
                                    {
                                        <div class="comment-container">
                                            <div class="d-flex mb-4">
                                                <!-- Parent comment-->
                                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                                <div class="ms-3">
                                                    <div class="fw-bold">@comment.CreatedBy.UserName</div>
                                                    <div class="text-break">@comment.Content</div>
                                                    <div class="reply-comment-btns-container">
                                                        <button>Like</button>
                                                        <button>Reply</button>
                                                    </div>
                                                    @foreach (CommentReply reply in comment.Replies)
                                                    {
                                                        <!-- Child comment -->
                                                        <div class="d-flex mt-4">
                                                            <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                                            <div class="ms-3">
                                                                <div class="fw-bold">@reply.CreatedBy.UserName</div>
                                                                <div>@reply.Content</div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                            @if (SignInManager.IsSignedIn(User) && comment.CreatedBy.UserName == (await UserManager.GetUserAsync(User)).UserName)
                                            {
                                                <div class="dropdown">
                                                    <svg class="menu-icon" width="60px" height="40px" viewBox="-2.4 -2.4 28.80 28.80" fill="none" xmlns="http://www.w3.org/2000/svg" transform="rotate(90)matrix(1, 0, 0, 1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z" stroke="#000000" stroke-width="2.4" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z" stroke="#000000" stroke-width="2.4" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z" stroke="#000000" stroke-width="2.4" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                                                    <div class="dropdown-content">
                                                        <a href="/Blog/EditComment/@comment.Id">Edit</a>
                                                        <a href="/Blog/DeleteComment/@comment.Id">Delete</a>
                                                    </div>
                                                </div>
                                            }
                                         </div>
                                    }
                                }
                            }*@
                        </div>
                    </div>
                </div>
            </section>
        </div>
        <!-- Side widgets-->
        <div class="col-lg-4">
            <!-- Search widget-->
            <div class="card mb-4">
                <div class="card-header">Search</div>
                <div class="card-body">
                    <div class="input-group">
                        <input class="form-control" type="text" placeholder="Enter search term..." aria-label="Enter search term..." aria-describedby="button-search" />
                        <button class="btn btn-primary" id="searchBarBtn" type="button">Go!</button>
                    </div>
                </div>
            </div>
            <!-- Categories widget-->
            <div class="card mb-4">
                <div class="card-header">Categories</div>
                <div class="card-body">
                    <div class="row">
                        <ul class="list-unstyled mb-0">
                        @{
                            foreach (var cat in Model.BlogCategories)
                            {
                                <li>
                                    <a class="" asp-controller="Home" asp-action="Index" asp-route-id="@cat">@cat</a>
                                </li>

                            }
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <!-- Side widget-->
            <div class="card mb-4">
                <div class="card-header">Side Widget</div>
                <div class="card-body">You can put anything you want inside of these side widgets. They are easy to use, and feature the Bootstrap 5 card component!</div>
            </div>
        </div>
    </div>
</div>
